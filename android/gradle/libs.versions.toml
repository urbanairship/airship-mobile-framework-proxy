[versions]

# Airship
airshipProxy = '14.10.0'
airship = '19.13.5'

# Gradle plugins
androidGradlePlugin = '8.3.2'
nexusPublishPlugin = '1.1.0'
gradle-versions =  '0.41.0'
preferenceKtx = "1.2.1"
spotlessPlugin = '6.4.2'

# Spotless plugins
ktlint = '0.45.2'

# Dependencies

# Kotlin
kotlin = '1.9.24'
kotlinx-coroutines = '1.8.1'

# Androidx
androidx-annotation = '1.9.1'

# Test
google-truth = '1.1.3'
junit = '4.13.2'
mockk = '1.12.5'
robolectric = '4.11.1'
androidx-test-core = '1.6.1'
androidx-test-espresso = '3.6.1'
androidx-test-junit = '1.2.1'
androidx-test-rules = '1.6.1'
androidx-test-runner = '1.6.2'
androidx-test-truth = '1.6.0'

[plugins]
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-library = { id = 'com.android.library', version.ref = "androidGradlePlugin" }
benmanes-versions = { id = 'com.github.ben-manes.versions', version.ref = "gradle-versions" }
nexus-publishing = { id = 'io.github.gradle-nexus.publish-plugin', version.ref = "nexusPublishPlugin" }
spotless = { id = 'com.diffplug.spotless', version.ref = "spotlessPlugin" }

[libraries]

# Kotlin
androidx-preference-ktx = { module = "androidx.preference:preference-ktx", version.ref = "preferenceKtx" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines"}
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines"}
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines"}

# Androidx
androidx-annotation = { module = "androidx.annotation:annotation", version.ref = "androidx-annotation" }

# Airship
airship-core = { module = "com.urbanairship.android:urbanairship-core", version.ref = "airship"}
airship-message-center = { module = "com.urbanairship.android:urbanairship-message-center", version.ref = "airship"}
airship-preference-center = { module = "com.urbanairship.android:urbanairship-preference-center", version.ref = "airship"}
airship-automation = { module = "com.urbanairship.android:urbanairship-automation", version.ref = "airship"}
airship-fcm = { module = "com.urbanairship.android:urbanairship-fcm", version.ref = "airship"}
airship-live-update = { module = "com.urbanairship.android:urbanairship-live-update", version.ref = "airship"}

airship-feature-flag = { module = "com.urbanairship.android:urbanairship-feature-flag", version.ref = "airship"}
airship-hms = { module = "com.urbanairship.android:urbanairship-hms", version.ref = "airship"}

# Testing
androidx-test-core = { module = "androidx.test:core", version.ref = "androidx-test-core" }
androidx-test-corektx = { module = "androidx.test:core-ktx", version.ref = "androidx-test-core" }
androidx-test-espresso-contrib = { module = "androidx.test.espresso:espresso-contrib", version.ref="androidx-test-espresso" }
androidx-test-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref="androidx-test-espresso" }
androidx-test-espresso-idling-concurrent = { module = "androidx.test.espresso.idling:idling-concurrent", version.ref = "androidx-test-espresso" }
androidx-test-espresso-intents = { module = "androidx.test.espresso:espresso-intents", version.ref="androidx-test-espresso" }
androidx-test-espresso-web = { module = "androidx.test.espresso:espresso-web", version.ref="androidx-test-espresso" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-test-junit" }
androidx-test-ext-junitktx = { module = "androidx.test.ext:junit-ktx", version.ref = "androidx-test-junit" }
androidx-test-ext-truth = { module = "androidx.test.ext:truth", version.ref = "androidx-test-truth" }
androidx-test-rules = { module = "androidx.test:rules", version.ref = "androidx-test-rules" }
androidx-test-runner = { module = "androidx.test:runner", version.ref = "androidx-test-runner" }

junit = { module = "junit:junit", version.ref = "junit" }

google-truth = { module = "com.google.truth:truth", version.ref = "google-truth" }

robolectric-core = { module = "org.robolectric:robolectric", version.ref = "robolectric" }
robolectric-annotations = { module = "org.robolectric:annotations", version.ref = "robolectric"}

mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
